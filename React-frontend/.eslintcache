[{"/home/eliza/todo_api/todo-app/src/reportWebVitals.ts":"1","/home/eliza/todo_api/todo-app/src/App.tsx":"2","/home/eliza/todo_api/todo-app/src/index.tsx":"3","/home/eliza/todo_api/todo-app/src/components/TodoContainer.tsx":"4","/home/eliza/todo_api/todo-app/src/components/AddTodo.tsx":"5","/home/eliza/todo_api/todo-app/src/components/EditTodo.tsx":"6","/home/eliza/CVWO_assignment/React-frontend/src/App.tsx":"7","/home/eliza/CVWO_assignment/React-frontend/src/components/EditTodo.tsx":"8","/home/eliza/CVWO_assignment/React-frontend/src/components/TodoContainer.tsx":"9","/home/eliza/CVWO_assignment/React-frontend/src/reportWebVitals.ts":"10","/home/eliza/CVWO_assignment/React-frontend/src/components/NavBar.tsx":"11"},{"size":425,"mtime":1607864218513,"results":"12","hashOfConfig":"13"},{"size":8204,"mtime":1609130952269,"results":"14","hashOfConfig":"13"},{"size":544,"mtime":1608979478211,"results":"15","hashOfConfig":"13"},{"size":4378,"mtime":1609135004955,"results":"16","hashOfConfig":"13"},{"size":1136,"mtime":1609070145353,"results":"17","hashOfConfig":"13"},{"size":3334,"mtime":1609139824119,"results":"18","hashOfConfig":"13"},{"size":6228,"mtime":1609245431746,"results":"19","hashOfConfig":"20"},{"size":4477,"mtime":1609230435458,"results":"21","hashOfConfig":"20"},{"size":5022,"mtime":1609235446858,"results":"22","hashOfConfig":"20"},{"size":425,"mtime":1607864218513,"results":"23","hashOfConfig":"20"},{"size":4365,"mtime":1609245476709,"results":"24","hashOfConfig":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w81wxd",{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"tj79rc",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/eliza/todo_api/todo-app/src/reportWebVitals.ts",[],"/home/eliza/todo_api/todo-app/src/App.tsx",["48","49","50","51","52"],"/home/eliza/todo_api/todo-app/src/index.tsx",[],"/home/eliza/todo_api/todo-app/src/components/TodoContainer.tsx",["53","54","55","56","57","58"],"/home/eliza/todo_api/todo-app/src/components/AddTodo.tsx",[],"/home/eliza/todo_api/todo-app/src/components/EditTodo.tsx",["59","60","61","62","63","64","65"],"/home/eliza/CVWO_assignment/React-frontend/src/App.tsx",["66"],"/home/eliza/CVWO_assignment/React-frontend/src/components/EditTodo.tsx",["67"],"import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\ninterface Tag {\n  id: number;\n  name: string;\n  taggings_count: number;\n}\n\ninterface Todo {\n  title: string;\n  tag_list: string[];\n}\ninterface EditProps {\n  editTodo: (data: Todo, id: number) => void;\n  tags: Tag[];\n  ItemId: number;\n  ItemTitle: string;\n  ItemTags: string[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"& > * + *\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n  })\n);\n\nfunction EditForm(Props: EditProps) {\n  const [inputError, setInputError] = useState(false);\n  const [tagChange, setTagChange] = useState(false);\n  const [titleChange, setTitleChange] = useState(false);\n  const [inputTitle, setInputTitle] = useState(\"\");\n  const [inputTags, setInputTags] = useState<string[]>([]);\n  const { handleSubmit, register } = useForm<Todo>();\n  const classes = useStyles();\n\n  let history = useHistory();\n\n  function ValidateInput(e: ChangeEvent<HTMLInputElement>) {\n    const target = e.target as HTMLInputElement;\n    setTitleChange(true);\n    setInputTitle(target.value);\n    if (target.value.trim() === \"\") {\n      setInputError(true);\n    } else {\n      setInputError(false);\n    }\n  }\n  function handleTagChange(value: string[]) {\n    setTagChange(true);\n    setInputTags(value);\n  }\n  function onSubmit(data: Todo) {\n    //console.log(data);\n    setTagChange(false);\n    setTitleChange(false);\n    Props.editTodo(\n      {\n        title: data.title.trim(),\n        tag_list: inputTags,\n      },\n      Props.ItemId\n    );\n    history.push(\"/\");\n  }\n\n  useEffect(() => {\n    setInputTitle(Props.ItemTitle);\n    setInputTags(Props.ItemTags);\n    setTitleChange(false);\n    setTagChange(false);\n  }, [Props.ItemId]);\n\n  if (Props.ItemId === -1) {\n    return (\n      <div>\n        <h1>Select an item.</h1>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Grid container direction=\"column\" spacing={2}>\n          <Grid item xs>\n            <Grid container justify=\"flex-end\">\n              <Button\n                disabled={!(tagChange || titleChange)}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Update Todo\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid item xs>\n            <TextField\n              required\n              inputRef={register}\n              multiline\n              fullWidth\n              name=\"title\"\n              onChange={ValidateInput}\n              label=\"Title\"\n              value={!titleChange ? Props.ItemTitle : inputTitle}\n              error={inputError}\n              helperText={inputError ? \"*Required\" : \"\"}\n              size=\"medium\"\n              InputProps={{ style: { fontSize: 30 } }}\n              InputLabelProps={{ style: { fontSize: 30, minHeight: 40 } }}\n              margin=\"normal\"\n            />\n          </Grid>\n          <Grid item xs>\n            <div className={classes.root}>\n              <Autocomplete\n                multiple\n                id=\"tags-filled\"\n                options={Props.tags.map((tag) => tag.name)}\n                value={!tagChange ? Props.ItemTags : inputTags}\n                onChange={(_, value) => handleTagChange(value)}\n                freeSolo\n                renderTags={(value: string[], getTagProps) =>\n                  value.map((option: string, index: number) => (\n                    <Chip\n                      variant=\"outlined\"\n                      label={option}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    label=\"Tags\"\n                    placeholder=\"Input your tags\"\n                  />\n                )}\n              />\n            </div>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n}\nexport default EditForm;\n","/home/eliza/CVWO_assignment/React-frontend/src/components/TodoContainer.tsx",[],"/home/eliza/CVWO_assignment/React-frontend/src/reportWebVitals.ts",[],"/home/eliza/CVWO_assignment/React-frontend/src/components/NavBar.tsx",[],{"ruleId":"68","severity":1,"message":"69","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":16},{"ruleId":"68","severity":1,"message":"72","line":2,"column":18,"nodeType":"70","messageId":"71","endLine":2,"endColumn":23},{"ruleId":"68","severity":1,"message":"73","line":2,"column":25,"nodeType":"70","messageId":"71","endLine":2,"endColumn":29},{"ruleId":"68","severity":1,"message":"74","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":19},{"ruleId":"68","severity":1,"message":"75","line":22,"column":8,"nodeType":"70","messageId":"71","endLine":22,"endColumn":20},{"ruleId":"68","severity":1,"message":"73","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":14},{"ruleId":"68","severity":1,"message":"76","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":14},{"ruleId":"68","severity":1,"message":"77","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":24},{"ruleId":"68","severity":1,"message":"78","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":26},{"ruleId":"68","severity":1,"message":"79","line":13,"column":8,"nodeType":"70","messageId":"71","endLine":13,"endColumn":24},{"ruleId":"68","severity":1,"message":"80","line":17,"column":10,"nodeType":"70","messageId":"71","endLine":17,"endColumn":17},{"ruleId":"68","severity":1,"message":"81","line":1,"column":30,"nodeType":"70","messageId":"71","endLine":1,"endColumn":39},{"ruleId":"68","severity":1,"message":"82","line":3,"column":22,"nodeType":"70","messageId":"71","endLine":3,"endColumn":33},{"ruleId":"68","severity":1,"message":"83","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":18},{"ruleId":"68","severity":1,"message":"84","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":11},{"ruleId":"68","severity":1,"message":"85","line":9,"column":10,"nodeType":"70","messageId":"71","endLine":9,"endColumn":20},{"ruleId":"68","severity":1,"message":"86","line":9,"column":22,"nodeType":"70","messageId":"71","endLine":9,"endColumn":34},{"ruleId":"68","severity":1,"message":"87","line":21,"column":11,"nodeType":"70","messageId":"71","endLine":21,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":182,"column":27,"nodeType":"90","messageId":"91","endLine":182,"endColumn":29},{"ruleId":"92","severity":1,"message":"93","line":83,"column":6,"nodeType":"94","endLine":83,"endColumn":20,"suggestions":"95"},"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'AddTodoForm' is defined but never used.","'ListItemIcon' is defined but never used.","'Button' is defined but never used.","'EditOutlinedIcon' is defined but never used.","'DeleteOutlinedIcon' is defined but never used.","'FormControlLabel' is defined but never used.","'Divider' is defined but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'makeStyles' is defined but never used.","'createStyles' is defined but never used.","'LocationState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Props.ItemTags' and 'Props.ItemTitle'. Either include them or remove the dependency array. If 'setInputTitle' needs the current value of 'Props.ItemTitle', you can also switch to useReducer instead of useState and read 'Props.ItemTitle' in the reducer.","ArrayExpression",["96"],{"desc":"97","fix":"98"},"Update the dependencies array to be: [Props.ItemId, Props.ItemTags, Props.ItemTitle]",{"range":"99","text":"100"},[2143,2157],"[Props.ItemId, Props.ItemTags, Props.ItemTitle]"]